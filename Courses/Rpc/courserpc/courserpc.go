// Code generated by goctl. DO NOT EDIT!
// Source: courseRpc.proto

package courserpc

import (
	"context"

	"onlineEudcation/Courses/Rpc/Rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CourseAddReq     = Rpc.CourseAddReq
	CourseHitsReq    = Rpc.CourseHitsReq
	CourseResp       = Rpc.CourseResp
	DeleteCourseReq  = Rpc.DeleteCourseReq
	DeleteCourseResp = Rpc.DeleteCourseResp
	UpdateCourseReq  = Rpc.UpdateCourseReq

	CourseRpc interface {
		AddCourse(ctx context.Context, in *CourseAddReq, opts ...grpc.CallOption) (*CourseResp, error)
		DeleteCourse(ctx context.Context, in *DeleteCourseReq, opts ...grpc.CallOption) (*DeleteCourseResp, error)
		UpdateCourse(ctx context.Context, in *UpdateCourseReq, opts ...grpc.CallOption) (*CourseResp, error)
		CourseHits(ctx context.Context, in *CourseHitsReq, opts ...grpc.CallOption) (*CourseResp, error)
	}

	defaultCourseRpc struct {
		cli zrpc.Client
	}
)

func NewCourseRpc(cli zrpc.Client) CourseRpc {
	return &defaultCourseRpc{
		cli: cli,
	}
}

func (m *defaultCourseRpc) AddCourse(ctx context.Context, in *CourseAddReq, opts ...grpc.CallOption) (*CourseResp, error) {
	client := Rpc.NewCourseRpcClient(m.cli.Conn())
	return client.AddCourse(ctx, in, opts...)
}

func (m *defaultCourseRpc) DeleteCourse(ctx context.Context, in *DeleteCourseReq, opts ...grpc.CallOption) (*DeleteCourseResp, error) {
	client := Rpc.NewCourseRpcClient(m.cli.Conn())
	return client.DeleteCourse(ctx, in, opts...)
}

func (m *defaultCourseRpc) UpdateCourse(ctx context.Context, in *UpdateCourseReq, opts ...grpc.CallOption) (*CourseResp, error) {
	client := Rpc.NewCourseRpcClient(m.cli.Conn())
	return client.UpdateCourse(ctx, in, opts...)
}

func (m *defaultCourseRpc) CourseHits(ctx context.Context, in *CourseHitsReq, opts ...grpc.CallOption) (*CourseResp, error) {
	client := Rpc.NewCourseRpcClient(m.cli.Conn())
	return client.CourseHits(ctx, in, opts...)
}
