// Code generated by goctl. DO NOT EDIT!
// Source: courseRpc.proto

package server

import (
	"context"

	"onlineEudcation/Courses/Rpc/Rpc"
	"onlineEudcation/Courses/Rpc/internal/logic"
	"onlineEudcation/Courses/Rpc/internal/svc"
)

type CourseRpcServer struct {
	svcCtx *svc.ServiceContext
	Rpc.UnimplementedCourseRpcServer
}

func NewCourseRpcServer(svcCtx *svc.ServiceContext) *CourseRpcServer {
	return &CourseRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *CourseRpcServer) AddCourse(ctx context.Context, in *Rpc.CourseAddReq) (*Rpc.CourseResp, error) {
	l := logic.NewAddCourseLogic(ctx, s.svcCtx)
	return l.AddCourse(in)
}

func (s *CourseRpcServer) DeleteCourse(ctx context.Context, in *Rpc.DeleteCourseReq) (*Rpc.DeleteCourseResp, error) {
	l := logic.NewDeleteCourseLogic(ctx, s.svcCtx)
	return l.DeleteCourse(in)
}

func (s *CourseRpcServer) UpdateCourse(ctx context.Context, in *Rpc.UpdateCourseReq) (*Rpc.CourseResp, error) {
	l := logic.NewUpdateCourseLogic(ctx, s.svcCtx)
	return l.UpdateCourse(in)
}
