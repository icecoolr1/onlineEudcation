// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: videoRpc.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DelVideoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *DelVideoReq) Reset() {
	*x = DelVideoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_videoRpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelVideoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelVideoReq) ProtoMessage() {}

func (x *DelVideoReq) ProtoReflect() protoreflect.Message {
	mi := &file_videoRpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelVideoReq.ProtoReflect.Descriptor instead.
func (*DelVideoReq) Descriptor() ([]byte, []int) {
	return file_videoRpc_proto_rawDescGZIP(), []int{0}
}

func (x *DelVideoReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type AddVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId     int32  `protobuf:"varint,1,opt,name=courseId,proto3" json:"courseId,omitempty"`
	VideoFileUrl string `protobuf:"bytes,2,opt,name=videoFileUrl,proto3" json:"videoFileUrl,omitempty"`
	VideoName    string `protobuf:"bytes,3,opt,name=videoName,proto3" json:"videoName,omitempty"`
	VideoSeq     int32  `protobuf:"varint,4,opt,name=videoSeq,proto3" json:"videoSeq,omitempty"`
}

func (x *AddVideoRequest) Reset() {
	*x = AddVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_videoRpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVideoRequest) ProtoMessage() {}

func (x *AddVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_videoRpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVideoRequest.ProtoReflect.Descriptor instead.
func (*AddVideoRequest) Descriptor() ([]byte, []int) {
	return file_videoRpc_proto_rawDescGZIP(), []int{1}
}

func (x *AddVideoRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *AddVideoRequest) GetVideoFileUrl() string {
	if x != nil {
		return x.VideoFileUrl
	}
	return ""
}

func (x *AddVideoRequest) GetVideoName() string {
	if x != nil {
		return x.VideoName
	}
	return ""
}

func (x *AddVideoRequest) GetVideoSeq() int32 {
	if x != nil {
		return x.VideoSeq
	}
	return 0
}

type AddVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AddVideoResponse) Reset() {
	*x = AddVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_videoRpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVideoResponse) ProtoMessage() {}

func (x *AddVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_videoRpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVideoResponse.ProtoReflect.Descriptor instead.
func (*AddVideoResponse) Descriptor() ([]byte, []int) {
	return file_videoRpc_proto_rawDescGZIP(), []int{2}
}

func (x *AddVideoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddVideoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type UpdateVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId      int64  `protobuf:"varint,1,opt,name=videoId,proto3" json:"videoId,omitempty"`
	VideoFileUrl string `protobuf:"bytes,2,opt,name=videoFileUrl,proto3" json:"videoFileUrl,omitempty"`
	VideoName    string `protobuf:"bytes,3,opt,name=videoName,proto3" json:"videoName,omitempty"`
	VideoSeq     int32  `protobuf:"varint,4,opt,name=videoSeq,proto3" json:"videoSeq,omitempty"`
}

func (x *UpdateVideoRequest) Reset() {
	*x = UpdateVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_videoRpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVideoRequest) ProtoMessage() {}

func (x *UpdateVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_videoRpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVideoRequest.ProtoReflect.Descriptor instead.
func (*UpdateVideoRequest) Descriptor() ([]byte, []int) {
	return file_videoRpc_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateVideoRequest) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *UpdateVideoRequest) GetVideoFileUrl() string {
	if x != nil {
		return x.VideoFileUrl
	}
	return ""
}

func (x *UpdateVideoRequest) GetVideoName() string {
	if x != nil {
		return x.VideoName
	}
	return ""
}

func (x *UpdateVideoRequest) GetVideoSeq() int32 {
	if x != nil {
		return x.VideoSeq
	}
	return 0
}

var File_videoRpc_proto protoreflect.FileDescriptor

var file_videoRpc_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x72, 0x70, 0x63, 0x22, 0x28, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22,
	0x8b, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x71, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x71, 0x22, 0x40, 0x0a,
	0x10, 0x41, 0x64, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x8c, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x71, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x71, 0x32, 0xbb,
	0x01, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x37, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x14, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x17, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05,
	0x2e, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_videoRpc_proto_rawDescOnce sync.Once
	file_videoRpc_proto_rawDescData = file_videoRpc_proto_rawDesc
)

func file_videoRpc_proto_rawDescGZIP() []byte {
	file_videoRpc_proto_rawDescOnce.Do(func() {
		file_videoRpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_videoRpc_proto_rawDescData)
	})
	return file_videoRpc_proto_rawDescData
}

var file_videoRpc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_videoRpc_proto_goTypes = []interface{}{
	(*DelVideoReq)(nil),        // 0: rpc.DelVideoReq
	(*AddVideoRequest)(nil),    // 1: rpc.AddVideoRequest
	(*AddVideoResponse)(nil),   // 2: rpc.AddVideoResponse
	(*UpdateVideoRequest)(nil), // 3: rpc.UpdateVideoRequest
}
var file_videoRpc_proto_depIdxs = []int32{
	1, // 0: rpc.VideoService.AddVideo:input_type -> rpc.AddVideoRequest
	0, // 1: rpc.VideoService.DelVideo:input_type -> rpc.DelVideoReq
	3, // 2: rpc.VideoService.UpdateVideo:input_type -> rpc.UpdateVideoRequest
	2, // 3: rpc.VideoService.AddVideo:output_type -> rpc.AddVideoResponse
	2, // 4: rpc.VideoService.DelVideo:output_type -> rpc.AddVideoResponse
	2, // 5: rpc.VideoService.UpdateVideo:output_type -> rpc.AddVideoResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_videoRpc_proto_init() }
func file_videoRpc_proto_init() {
	if File_videoRpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_videoRpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelVideoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_videoRpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_videoRpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_videoRpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_videoRpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_videoRpc_proto_goTypes,
		DependencyIndexes: file_videoRpc_proto_depIdxs,
		MessageInfos:      file_videoRpc_proto_msgTypes,
	}.Build()
	File_videoRpc_proto = out.File
	file_videoRpc_proto_rawDesc = nil
	file_videoRpc_proto_goTypes = nil
	file_videoRpc_proto_depIdxs = nil
}
