// Code generated by goctl. DO NOT EDIT!
// Source: teacherRpc.proto

package teacherrpc

import (
	"context"

	"onlineEudcation/Teacher/Rpc/Rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginResponse    = Rpc.LoginResponse
	Response         = Rpc.Response
	Teacher          = Rpc.Teacher
	TeacherInfo      = Rpc.TeacherInfo
	TeacherLoginInfo = Rpc.TeacherLoginInfo

	TeacherRpc interface {
		Register(ctx context.Context, in *TeacherInfo, opts ...grpc.CallOption) (*Response, error)
		Login(ctx context.Context, in *TeacherLoginInfo, opts ...grpc.CallOption) (*LoginResponse, error)
	}

	defaultTeacherRpc struct {
		cli zrpc.Client
	}
)

func NewTeacherRpc(cli zrpc.Client) TeacherRpc {
	return &defaultTeacherRpc{
		cli: cli,
	}
}

func (m *defaultTeacherRpc) Register(ctx context.Context, in *TeacherInfo, opts ...grpc.CallOption) (*Response, error) {
	client := Rpc.NewTeacherRpcClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultTeacherRpc) Login(ctx context.Context, in *TeacherLoginInfo, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := Rpc.NewTeacherRpcClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
