// Code generated by goctl. DO NOT EDIT!
// Source: classesrpc.proto

package classesrpc

import (
	"context"

	"onlineEudcation/Classes/rpc/rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddClassRequest = rpc.AddClassRequest
	Request         = rpc.Request

	ClassesRpc interface {
		AddClass(ctx context.Context, in *AddClassRequest, opts ...grpc.CallOption) (*Request, error)
		DeleteClass(ctx context.Context, in *AddClassRequest, opts ...grpc.CallOption) (*Request, error)
	}

	defaultClassesRpc struct {
		cli zrpc.Client
	}
)

func NewClassesRpc(cli zrpc.Client) ClassesRpc {
	return &defaultClassesRpc{
		cli: cli,
	}
}

func (m *defaultClassesRpc) AddClass(ctx context.Context, in *AddClassRequest, opts ...grpc.CallOption) (*Request, error) {
	client := rpc.NewClassesRpcClient(m.cli.Conn())
	return client.AddClass(ctx, in, opts...)
}

func (m *defaultClassesRpc) DeleteClass(ctx context.Context, in *AddClassRequest, opts ...grpc.CallOption) (*Request, error) {
	client := rpc.NewClassesRpcClient(m.cli.Conn())
	return client.DeleteClass(ctx, in, opts...)
}
